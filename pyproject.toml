[build-system]
requires = ["setuptools>=61.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sampling-handler"
version = "0.0.0"
description = "python module"
keywords = ["skeleton", "Python"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.6.9"

dependencies = [
    # web
    "requests",
    "retrying",
    # geospatial libs
    "earthengine-api",
    "ee_preproc @ git+https://github.com/BuddyVolly/ee-preproc",
    "geojson",
    "xarray",
    "geopandas",
    "dask-geopandas",
    "geoparquet",
    "geemap",
    "contextily",
    "matplotlib_scalebar",
    "plotly",
    # data science and ML
    "numpy",
    "pandas",
    "pyarrow",
    "scipy",
    "scikit-learn",
    "scikit-optimize",
    "imbalanced-learn",
    "matplotlib",
    "seaborn",
    "openpyxl",
    "tensorflow==2.15.0",
    # time-series
    "nrt",
    "bfast @ git+https://github.com/dfguerrerom/bfast"
]

[[project.authors]]
name = "Andreas Vollrath"
email = "andreas.vollrath@fao.org"

[project.license]
text = "MIT"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/BuddyVolly/sampling-handler"

[project.optional-dependencies]
dev = ["pre-commit", "commitizen", "nox", "mypy"]
test = ["pytest", "pytest-sugar", "pytest-cov", "pytest-deadfixtures"]
doc = ["sphinx", "pydata-sphinx-theme", "sphinx-copybutton", "sphinx-design", "sphinx-icon", "sphinx-btn"]

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE.txt"]

[tool.setuptools.packages.find]
include = ["sampling_handler*"]
exclude = ["docs*", "tests*"]

[tool.commitizen]
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = false
version = "0.0.0"
version_files = [
    "pyproject.toml:version",
    "sampling_handler/__init__.py:__version__",
    "docs/conf.py:release"
]

[tool.pytest.ini_options]
testpaths = "tests"

[tool.ruff]
ignore-init-module-imports = true
fix = true
select = ["E", "F", "W", "I", "D", "RUF"]
ignore = ["E501"]  # line too long | Black take care of it

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pydocstyle]
convention = "google"

[tool.coverage.run]
source = ["sampling_handler"]

[tool.doc8]
ignore = ["D001"] # we follow a 1 line = 1 paragraph style

[tool.mypy]
scripts_are_modules = true
ignore_missing_imports = true
install_types = true
non_interactive = true
warn_redundant_casts = true

[tool.licensecheck]
using = "PEP631:test;dev;doc"
